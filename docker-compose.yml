version: '2'
services:
  postgreslberg: #how to add custom conf
    image: postgres
    env_file: .env    
    volumes:
      - ./postgesqldata/:/var/lib/postgresql/data:rw 
      - ./configEnv/postgresql.conf:/var/lib/postgresql/data/postgresql.conf  
      - ./log/postgresql/:/var/lib/postgresql/data/pg_log/ 
#        - postgesqldata  
    ports:
      - '127.0.0.1:5432:5432'
  lbergmap:
    build: .
    env_file: .env
    command: supervisord -c /etc/supervisor/conf.d/unicorn_supervisord.conf    
    volumes:
      - .:/lbergmap
      - ./configEnv/unicorn_supervisord.conf:/etc/supervisor/conf.d/unicorn_supervisord.conf  
        #- socketfolder:/var/run/lbergsocket
    ports:
        - '127.0.0.1:30001:30001'
        - '127.0.0.1:30000:30000'
    links:
      - postgreslberg 

#  nginxlberg:
#    image: nginx
#    ports:
#        - '80:80'
#        - '443:443'  
#    volumes:
#        - ./configEnv/nginx_lberg.conf:/etc/nginx/nginx.conf 
#        - ./configEnv/nginx_lberg_site.conf:/etc/nginx/lberg-map  
#        - /etc/letsencrypt/:/etc/letsencrypt/  
#        - ./log/nginx/:/var/log/nginx/  
#          #        - socketfolder:/var/run/lbergsocket
#    links:
#        - lbergmap:lberg
volumes:
  socketfolder: {}
#  postgesqldata: {}    

#1. docker-compose build create the images
#2. run init commands
#    docker-compose exec -T lbergmap rake db:create
#    docker-compose exec -T lbergmap rake db:migrate
#    docker-compose exec -T lbergmap rake assets:precompile
#3. docker-compose up (-d) - start containerts
#4. docker-compose exec lbergmap bash - start bash
# docker-compose ps / docker ps -a - list stoped containers
# docker rm/rmi - remove container/image
# 
# docker-compose run
#TODO:
#* change volume mount in production
# - mount ro everything mount rw sharred
#* change port forwarding to socket file
# 
#* database backup
#
#* watchtower
