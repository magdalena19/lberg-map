= form_for(@place, url: @url, remote: true) do |f|
  .row
    .col-xs-12
      - if @place.unreviewed_version
        .red currently under review

    -# ADDRESS
    .col-xs-12
      %h4.header-row= t('.address_data')

      %fieldset{class: "form-group row #{'has-error' if f.object.errors.include?(:name)}"}
        - if Admin::Setting.multi_color_pois
          .col-xs-10
            = f.label :name, t('.place_name') + '*'
            = f.text_field :name, class: 'form-control', disabled: @place.unreviewed_version
          .col-xs-2
            = f.label :color, t('.place_color')
            = f.text_field :color, class: 'color-picker', value: @place.color || Place.available_colors.first
        - else
          .col-xs-12
            = f.label :name, t('.place_name') + '*'
            = f.text_field :name, class: 'form-control', disabled: @place.unreviewed_version

      %fieldset{class: "form-group row #{'has-error' if f.object.errors.include?(:street)}"}
        .col-xs-8
          = f.label :street, t('.street') + '*'
          = f.text_field :street, class: 'form-control', value: @geocoded ? @geocoded[:street] : @place.street, disabled: @place.unreviewed_version
        .col-xs-4
          = f.label :house_number, 'Nr'
          = f.text_field :house_number, class: 'form-control', value: @geocoded ? @geocoded[:house_number] : @place.house_number, disabled: @place.unreviewed_version

      %fieldset{class: "form-group row #{'has-error' if f.object.errors.include?(:postal_code) || f.object.errors.include?(:city)}"}
        .col-xs-5
          = f.label :postal_code, t('.postal_code') + '*'
          = f.text_field :postal_code, class: 'form-control', value: @geocoded ? @geocoded[:postal_code] : @place.postal_code, disabled: @place.unreviewed_version
        .col-xs-7
          = f.label :city, t('.city')
          = f.text_field :city, class: 'form-control', value: @geocoded ? @geocoded[:city] : @place.city, disabled: @place.unreviewed_version


      -# CONTACT
      %h4.header-row.contact-information-header
        .toggle-switch
          = t('.contact_data')
          %span.glyphicon.glyphicon-triangle-bottom{style: 'font-size: 16px;'}

      .contact-information
        %fieldset{class: "form-group row #{'has-error' if f.object.errors.include?(:phone) || f.object.errors.include?(:email) || f.object.errors.include?(:homepage)}"}
          .col-sm-4
            = f.label :phone, t('.phone')
            = f.text_field :phone, class: 'form-control', disabled: @place.unreviewed_version
          .col-sm-4
            = f.label :email, t('.email')
            = f.text_field :email, class: 'form-control', disabled: @place.unreviewed_version
          .col-sm-4
            = f.label :homepage, t('.homepage')
            = f.text_field :homepage, class: 'form-control', disabled: @place.unreviewed_version

  -# DATE INFORMATION
  .row
    .col-xs-12
      %h4.header-row.date-information-header
        .toggle-switch
          = t('.date_information')
          %span.glyphicon.glyphicon-triangle-bottom{style: 'font-size: 16px;'}
      .date-information
        .row{id: 'place_event_toggle'}
          .col-xs-1
            = f.radio_button :event, false, disabled: @place.unreviewed_version, id: 'is_place', checked: !@place.event || true
          .col-xs-11
            = f.label :event, t('.is_place')
          .col-xs-1
            = f.radio_button :event, true, disabled: @place.unreviewed_version, id: 'is_event', checked: @place.event || false
          .col-xs-11
            = f.label :event, t('.is_event')

        .input-group.form_group.col-xs-12#place_date_form
          = f.text_field :start_date, class: 'form-control daterange', disabled: @place ? !@place.event? : true
          %span#end_date_toggle.input-group-addon
            %input#set_end_date{type: 'checkbox', checked: @place.end_date.present? }
          %span#end_date_descr.input-group-addon= t('.set_end_date')

  -# TAGS
  .row
    .col-xs-12
      %h4.header-row= t('.place_categories')
      = f.text_field :categories_string, placeholder: t('.categories_placeholder'), class: 'form-control category-input', disabled: @place.unreviewed_version, value: (@place.categories ? @place.categories.map(&:name).sort.join(', ') : nil), data: { 'list' => @map.category_names.join(',') }, autocomplete: :off

  -# DESCRIPTIONS
  .row
    .col-xs-12
      %h4.header-row= t('.place_descriptions')
    - @place.map.supported_languages.in_groups_of(2, false).each do |group|
      - group.each do |lang|
        - locale != lang ? hidden = 'hidden-description' : hidden = ''
        - column = "description_#{lang}"
        - translation = @place.translations.find_by(locale: lang)
        .col-xs-12
          .description-header
            %h4= t(column)
            - if locale != lang
              %h4.description-header
                %span.glyphicon.glyphicon-triangle-top{style: 'font-size: 14px;'}
            - else
              %h4.description-header
                %span.glyphicon.glyphicon-triangle-bottom{style: 'font-size: 14px;'}
          .description-editor{dir: "#{'rtl' if lang == 'ar'}", class: hidden}
            - if translation && translation.versions.length > 1
              %br
              .red= t('currently_under_review')
              = f.text_area column.to_sym, class: "description-area locked-description", disabled: true
            - elsif translation && translation.auto_translated
              %i (#{t('.auto_translated')})
              = f.text_area column.to_sym, class: "wysihtml5 description-area #{column}"
            - else
              = f.text_area column.to_sym, class: "wysihtml5 description-area #{column}"

  -# CAPTCHA
  .row.captcha-row
    .col-md-6
      = display_captcha unless @current_user.signed_in?

  -# BUTTONS
  .row.button-row
    .col-xs-6.col-sm-4.col-md-3
      = f.hidden_field :latitude, value: params[:latitude]
      = f.hidden_field :longitude, value: params[:longitude]
      - if @geocoded
        = f.hidden_field :district, value: @place.district || @geocoded[:district]
        = f.hidden_field :federal_state, value: @place.federal_state || @geocoded[:federal_state]
        = f.hidden_field :country, value: @place.country || @geocoded[:country]
      = f.submit class: 'btn btn-primary btn-success place-form-button submit-place-button'
    .col-xs-6.col-sm-4.col-md-3
      = link_to t('buttons.back'), '', class: 'btn btn-primary btn-danger place-form-button back-button'

:javascript
  window.is_event = #{@place.event};
  window.start_date = '#{@place.start_date || Date.today}';
  window.end_date = '#{@place.end_date || Date.tomorrow}';
  window.with_end_date = #{@place.end_date.present?}
  window.available_place_colors = #{Place.available_colors}
  window.default_poi_color = '#{Admin::Setting.default_poi_color}'
